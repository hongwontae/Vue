1. 자식 => 부모 통신
=> 자식 컴포넌트에서 이벤트를 발생하여 함수를 호출합니다.
=> 이 떄 핸들러는 this.$emit('custom-name')를 호출합니다. (인자에는 부모 요소가 식별할 문자열입니다.)
=> 호출이되면 'custom-name'을 부모 컴포넌트에서 자식 컴포넌트의 이벤트에 걸어줍니다.
=> v-on:custom-name=""/ 할당할 핸들러는 부모에서 로직을 정합니다.

=> React의 역방향 통신과 유사합니다.
=> 단지 호출의 권한을 자식 컴포넌트에게 준 것입니다.


2. this.$emit('cutome-name', 2,3,4,...)
=> 이를 통해서 부모 컴포넌트의 커스텀 이벤트 핸들러에게 원하는 값을 전달할 수 있습니다.


3. 설정 객체 emits
=> 컴포넌트가 어떠한 시점에 발생시킬 커스텀 이벤트를 정의합니다.
=> 없어도 동작하지만 명확히 기술해야 에러를 방지할 수 있습니다.
=> 배열은 문자열만 정의합니다.

=> 객체를 통해 정의하면 더 자세한 설정을 정의할 수 있습니다.
=> 함수를 추가할 수 있고 자식 컴포넌트 이벤트 핸들러의 인자를 받아서 유효성 검사할 떄 주로 사용합니다.
=> 함수 내에서 return true라면 핸들러 실행, 그렇지 않으면 return false를 통해 막을 수 있습니다.



1. props는 배열이나 객체를 값으로 받습니다.
1-1. 배열을 값으로 받으면 배열 안에 camelCase로 props를 채워넣으면 됩니다.

1-2. 객체라면 키는 camelCase, 값은 타입을 정의합니다.
=> camelCase : String
=> 더 나아가서 camelCase : {}를 정의할 수 있습니다.
=> phoneNumber : {
    type : String,
    required : true or false,
    default : '0' or function(){},
    validator : fumction(value){} => 유효성 검사를 할 수 있습니다.
}

1-3. 지원되는 type 값
=> String, Number, Boolean, Array, Object, Date, Function, Symbol..


2. props에 JS 표현식
=> v:bind, : 를 사용해서 값에 JS 표현식을 사용할 수 있습니다.


3. 커스텀 컴포넌트도 v-for를 받아서 처리할 수 있습니다.
=> 항상 주위해야 하는 점은 각 요소의 고유한 key 값을 전달해 주어야 합니다.
=> 반복되는 컴포넌트들에게 속성을 전달할 떄 v-bind을 사용하여 동적인 값을 줄 수 있습니다.


4. 부모 컴포넌트가 자식 컴포넌트에게 props를 넘겨줄 떄 개별적으로 정의하는것이 불편할 떄
=> data(){
    return {
        person : {firstName : 'H', lastName : 'WT'}
    }
}
=> <user-data v-bind="person"></user-data>



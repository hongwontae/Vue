1. slots
=> 자식 컴포넌트가 제공하는 빈 공간을 부모 컴포넌트가 채울 수 있도록 하는 기능입니다.
=> slot을 정의한 컴포넌트가 자식입니다.
=> template에서 <slot></slot> 태그를 사용해 부모 컴포넌트의 일부가 들어갈 자리를 지정합니다.
=> 부모 컴포넌트는 slot을 원하는 자리에 배치하고 내부에 원하는 컨텐츠를 배치합니다.
=> 유연성, 재사용성, 코드 가독성이 좋아집니다.


2. Named Slots
=> slot를 정의할 떄 여러 개로 정의할 수 있습니다.
=> slot 태그의 name 속성을 이용해서 슬롯 이름을 정의할 수 있습니다.
=> name 속성을 정하지 않은 단 하나의 슬롯은 default slot이 됩니다.

=> 이름이 붙은 슬롯에게 향하기 위해서 부모 컴포넌트는 원하는 컨텐츠의 루트에
=> <template v-slot:named-slot>
    <p>{{content}}</p>
</template> => named slot에 정확히 위치하게 됩니다.

=> 단 하나의 default slot에게 명확히 주려면
=> <template v-slot:'defalut'></template>
=> 이 형태를 갖추면 됩니다.
=> v-slot:은 #: 로 축약할 수 있습니다.


3. vue는 slot에 원하는 콘텐츠를 보내기전에 템플릿을 분석하고 컴파일합니다.
=> 그러나 style만은 예외입니다. 즉, slot의 style를 받습니다.


4. 슬롯 폴백
=> 부모 컴포넌트가 slot를 사용하지 않을 떄 slot fallback를 내보낼 수 있습니다.
=> <slot><h2>The Default</h2></slot>


5. slot info
=> $slot를 통해 현재 $slot 객체를 얻을 수 있습니다.
=> 자식 컴포넌트 즉, slot을 정의한 컴포넌트에서만 $slot을 얻을 수 있습니다. 
=> 만약 slot을 사용하지 않은 부모 컴포넌트는 $slot.header는 undefined가 반환됩니다.
=> 이를 통해 v-if만 $slot.header로 조건부 렌더링으로 개선할 수 있습니다.
1. 프로그래밍 move
=> this.$router.push('url') : 원하는 url 컴포넌트로 이동합니다.
=> this.$router.forward() : 앞으로 이동합니다.
=> this.$router.backward() : 뒤로 이동합니다.


2. 동적 세그먼트
=> url을 정의할 떄 terms/:id로 정의하면 terms의 뒤에 무엇이 오든 받아들입니다.


3. Vue 라우터는 로드된 컴포넌트를 언마운트하지 않고 캐시합니다.
=> URL이 변경된다해도 컴포넌트를 다시 렌더링하지 않습니다.
=> created를 통해 로직을 구성 했다면 created가 다시 실행되지 않습니다.

=> 동적인 페이지에 사용자가 존재하고 여기서 같은 레벨인 동적인 페이지로 이동하려고 했을 떄
컴포넌트를 언마운트 하지 않기에 methods, created 같은 함수들의 움직임 없기에 동적인 값이 보이지 않습니다.

=> $route 언제나 로드한 라우트의 최신 정보를 담고 있습니다.
=> 해당 vue 설정 객체에서 watch의 메서드에 $route(){} 작업을 하면 route의 특성 떄문에 동적인 페이지를
얻을 수 있습니다.



4. props : true
=> 동적 페이지 route를 정의하는 설정 객체에서 props : true을 설정하면
=> 동적 컴포넌트에서 props를 통해 동적 세그먼트를 받을 수 있습니다.

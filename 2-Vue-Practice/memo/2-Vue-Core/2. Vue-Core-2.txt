1. v-on
=> vue로 연결된 html 태그에서 Event를 연결할 수 있는 디렉티브입니다.
=> v-on:click='expression or function'
=> methods에서 함수를 바인딩하는 것이 좋은 방법입니다.
=> 바인딩할 떄 v-on:click='add()' or 'add'
=> add()라면 호출된 값을 바인딩하는 방식입니다. 동작하지만 추천하지는 않습니다.

=> event methods에 매개변수를 받고 싶다면 v-on:click='()=>add(num)' 이렇게 설정할 수 있습니다.
=> methods : {
    add(num){
        return this.counter = this.counter+num
    }
}


2. event 객체
=> 만약 v-on을 통해 methods를 바인딩하면 자동으로 methods는 event 객체를 받을 수 있습니다.
=> 그러나 임의적으로 다른 인자를 넣었다면 event 객체를 수신하지 못합니다.
=> 그럴 떄는 $event를 매개변수에 추가하여 사용하면 됩니다.


3. Event 수식어
=> Vue에 내장된 수식어를 사용하면 수신하는 이벤트에 연결해서 이벤트 동작을 바꿀 수 있습니다.
=> 문법 : v-on:event.수식어
=> v-on:event.prevent (브라우저 기본 동작을 막습니다.), .stop(전파 방지), .right or left(오른쪽 or 왼 클릭)
=> keyup.enter(enter 키를 눌렀다가 뗄 떄 트리거), keyup.pagedowun(...), keyup.ctrl(..)


4. v-once
=> 동적 데이터 바인딩을 한 번만 평가하도록 하는 vue 디렉티브입니다.


** React에서는 이벤트 함수를 호출하는 식으로 바인딩하면 컴포넌트가 렌더링하기도 전에 
호출이 되어서 많은 문제를 일으킬 수 있습니다.

** this.counter+1은 그냥 값 계산일 뿐입니다.